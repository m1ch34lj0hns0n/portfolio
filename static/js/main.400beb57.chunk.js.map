{"version":3,"sources":["components/experienceCard/index.module.css","components/header/index.module.css","components/navigation/index.module.css","components/about/me.jpg","components/experience/index.module.css","components/experience/logos/adestra-logo.png","components/about/index.module.css","components/experience/logos/redeye-logo.png","components/experience/logos/reed-logo.png","components/about/index.js","components/experienceCard/index.js","components/experience/experiences.js","components/experience/index.js","components/form/index.js","routes/index.js","components/contact/index.js","components/navigation/index.js","components/header/index.js","App.js","serviceWorker.js","index.js","components/contact/index.module.css"],"names":["module","exports","About","id","className","styles","aboutContainer","aboutTitle","meContainer","join","src","me","width","height","meImage","alt","href","target","rel","reedLogo","failing","ExperienceCard","props","logo","company","title","fromDate","toDate","description","Styles","timelineBlock","timelinePoint","timelineContent","dangerouslySetInnerHTML","__html","experiences","redeyeLogo","adestraLogo","Experience","experienceCards","map","exp","index","key","experienceContainer","Form","useState","success","formStatus","setFormStatus","formSubmit","e","preventDefault","form","data","FormData","forEach","value","serializeForm","error","fetch","action","method","body","JSON","stringify","headers","then","response","json","result","ok","onSubmit","htmlFor","name","type","required","role","aria-label","routes","component","contactContainer","contactTitle","link","size","icon","faGithubSquare","faLinkedin","Navigation","toggleNavigation","setToggleNavigation","toggledOnNavigationClass","navigationToggleOpen","navigationLinks","route","smooth","duration","to","toLowerCase","navigationLink","onClick","aria-expanded","prevValue","navigationToggle","navigationIcon","navigationMenu","navigationList","Header","x","y","mouseCords","setMouseCords","onMouseMove","pageX","pageY","header","headerTitle","style","backgroundPositionX","backgroundPositionY","headerSubTitle","App","ReactGA","initialize","pageview","window","location","pathname","sections","i","Fragment","Boolean","hostname","match","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.400beb57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timelineBlock\":\"experienceCard_timelineBlock__14Asl\",\"timelineContent\":\"experienceCard_timelineContent__1vLSD\",\"timelinePoint\":\"experienceCard_timelinePoint__1f8aD\",\"experienceContainer\":\"experienceCard_experienceContainer__1pf3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__F4Tm9\",\"headerTitle\":\"header_headerTitle__2Cf64\",\"headerSubTitle\":\"header_headerSubTitle__18K5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationToggle\":\"navigation_navigationToggle__2a7qC\",\"navigationToggleOpen\":\"navigation_navigationToggleOpen__2ACYt\",\"navigationIcon\":\"navigation_navigationIcon__3wu1F\",\"navigationMenu\":\"navigation_navigationMenu__1GyVx\",\"navigationList\":\"navigation_navigationList__2Kwy4\",\"navigationLink\":\"navigation_navigationLink__2blAu\"};","module.exports = __webpack_public_path__ + \"static/media/me.171c4627.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"experienceContainer\":\"experience_experienceContainer__3r3BF\"};","module.exports = __webpack_public_path__ + \"static/media/adestra-logo.b0fd5793.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutTitle\":\"about_aboutTitle__2J6Rj\",\"reedLogo\":\"about_reedLogo__3F6Bn\",\"failing\":\"about_failing__1GoKO\",\"meContainer\":\"about_meContainer__DlHMb\",\"meImage\":\"about_meImage__3ct3P\"};","module.exports = __webpack_public_path__ + \"static/media/redeye-logo.a09ee1a0.png\";","module.exports = __webpack_public_path__ + \"static/media/reed-logo.7c58f65b.png\";","import React from 'react';\r\nimport styles from './index.module.css';\r\nimport me from './me.jpg';\r\n\r\nconst About = ({id}) => (\r\n    <section id={id} className={styles.aboutContainer}>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <span className={styles.aboutTitle}>About</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"row flex-row-reverse\">\r\n                <div className={['col-sm', styles.meContainer].join(' ')}>\r\n                    <img\r\n                        src={me}\r\n                        width=\"175\"\r\n                        height=\"175\"\r\n                        className={[styles.meImage, 'mb-4 mb-lg-0'].join(' ')}\r\n                        alt=\"Mike Johnson, software development engineer\"\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-lg-9\">\r\n                    <p>Hey, I'm Michael. A self taught developer with 4+ years experience. I currently reside in Cambridgeshire and work for <a href=\"https://reed.co.uk\" target=\"_blank\" rel=\"noopener noreferrer\" className={styles.reedLogo}>reed.co.uk</a> as a software development engineer.</p>\r\n                    <p>I predominantly work on the client-side using HTML, CSS & JavaScript along with varying frameworks such as Bootstrap and ReactJS for creating rich user experiences. I also have experience with backend technologies such as C# .NET & NodeJS.</p>\r\n                    <p>When away from VSCode you can catch me collecting vinyl, <span className={styles.failing}>attempting</span> failing to learn guitar or out socialising at the local with chums.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default About;","import React from 'react';\r\nimport Styles from './index.module.css';\r\n\r\nconst ExperienceCard = ({props}) => {\r\n    const {logo, company, title, fromDate, toDate, description} = props;\r\n    \r\n    return (\r\n        <article className={[Styles.timelineBlock, 'row'].join(' ')}>\r\n            <div className={Styles.timelinePoint} />\r\n            <div className={Styles.timelineContent}>\r\n                <img src={logo} height=\"35\" width=\"100\" alt={company} />\r\n                <h3>{title}</h3>\r\n                <small>{`${fromDate} - ${toDate}`}</small>\r\n                {description && (\r\n                    <p dangerouslySetInnerHTML={{__html: description}} />\r\n                )}\r\n            </div>\r\n        </article>\r\n    )\r\n};\r\n\r\nexport default ExperienceCard;","import reedLogo from './logos/reed-logo.png';\r\nimport adestraLogo from './logos/adestra-logo.png';\r\nimport redeyeLogo from './logos/redeye-logo.png';\r\n\r\nconst experiences = [\r\n    {\r\n        company: 'reed.co.uk',\r\n        logo: reedLogo,\r\n        title: 'Software Development Engineer',\r\n        fromDate: 'Dec 2019',\r\n        toDate: 'Present',\r\n        description: '<p>Responsible for client-side development of new features for reed products, whilst maintaining existing products.</p><ul><li>Develop single page applications using React and vanilla JavaScript ES6 whilst implementing state management when required. Ensuring tests are written and E2E tests are updated.</li><li>Maintain existing/legacy applications using Knockout, jQuery & Razor (C#) on the client-side. Occasionally work with the server-side .NET C#.</li><li>Implementation of multi-variant tests using Adobe Target</li><li>SEO & performance optimisation</li>'\r\n    },\r\n    {\r\n        company: 'reed.co.uk',\r\n        logo: reedLogo,\r\n        title: 'Junior Front End Developer',\r\n        fromDate: 'Jul 2016',\r\n        toDate: 'Nov 2019'\r\n    },\r\n    {\r\n        company: 'reed.co.uk',\r\n        logo: reedLogo,\r\n        title: 'Web/Email Developer',\r\n        fromDate: 'Apr 2015',\r\n        toDate: 'Jun 2016',\r\n        description: '<p>Responsible for the development of both email and land page marketing campaigns.</p><ul><li>Develop email templates using both HTML/CSS whilst ensuring compatiblity across email clients.</li><li>Develop landing pages using for marketing campaigns, using HTML, CSS including frameworks such as Bootstrap, JavaScript including liberies such as jQuery. Ensure landing pages are tested across varying browsers.</li></ul>'\r\n    },\r\n    {\r\n        company: 'reed.co.uk',\r\n        logo: reedLogo,\r\n        title: 'Junior Web/Email Developer',\r\n        fromDate: 'Dec 2014',\r\n        toDate: 'May 2015'\r\n    },\r\n    {\r\n        company: 'Redeye International',\r\n        logo: redeyeLogo,\r\n        title: 'Email Marketing Executive',\r\n        fromDate: 'Jun 2014',\r\n        toDate: 'Nov 2015',\r\n        description: '<p>Managing standard & behavioural email campaigns on behalf of major international brands.</p><ul><li>Having day-to-day contact with clients and internal departments to manage their email marketing campaigns.</li><li>Manage campaign targeting, optimisation, transmission, delivery and the response/reporting.</li><li>Develop and manipulate HTML emails. This can include working on responsive landing pages e.g. email sign up pages.</li>'\r\n    },\r\n    {\r\n        company: 'reed.co.uk',\r\n        logo: reedLogo,\r\n        title: 'Junior Web/Email Developer',\r\n        fromDate: 'Mar 2014',\r\n        toDate: 'Jul 2015',\r\n        description: '<p>Temperary three month contract.</p>'\r\n    },\r\n    {\r\n        company: 'Adestra',\r\n        logo: adestraLogo,\r\n        title: 'Support Representative',\r\n        fromDate: 'Jul 2012',\r\n        toDate: 'Feb 2015',\r\n        description: '<p>Providing excellent client handling skills whilst liaising with clients on a day to day basis; ensuring email campaigns are delivered effectively and to deadline.</p><ul><li>Providing excellent support to users of email marketing platform.</li><li>Resolving problems using several inbound channels such as telephone, email and the online chat tool within our platform.</li><li>Resolving a range of issues from simple functionality issues, through to more involved problems that require investigation and liaison with colleagues, both within the team and other teams across the organisation.</li></ul>'\r\n    }\r\n];\r\n\r\nexport default experiences;","import React from 'react';\r\nimport Styles from './index.module.css';\r\n\r\nimport ExperienceCard from '../experienceCard';\r\nimport experiences from './experiences';\r\n\r\nconst Experience = ({id}) => {\r\n\r\n    const experienceCards = experiences.map((exp, index) => <ExperienceCard key={index} props={exp} />)\r\n\r\n    return (\r\n        <section id={id} className={Styles.experienceContainer}>\r\n            <div className=\"container\">\r\n                {experienceCards}\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default Experience;","import React, {useState} from 'react';\r\n\r\nconst Form = () => {\r\n\r\n    const [formStatus, setFormStatus] = useState({\r\n        success: false\r\n    });\r\n\r\n    const serializeForm = form => {\r\n        const data = {};\r\n        const formData = new FormData(form);\r\n        formData.forEach((value, key) => {data[key] = value});\r\n        return data;\r\n    };\r\n\r\n    const formSubmit = e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        const data = serializeForm(form);\r\n        setFormStatus({success: false, error: false});\r\n\r\n        fetch(form.action, {\r\n            method: form.method,\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            setFormStatus({success: result.ok});\r\n        });\r\n    };\r\n\r\n    return (\r\n        <form\r\n            method=\"post\"\r\n            action=\"https://formspree.io/f/xwkwlwbq\"\r\n            onSubmit={e => formSubmit(e)}\r\n        >\r\n            <div className=\"form-row mb-2\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"form-row mb-2\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    required\r\n                />\r\n            </div>\r\n            <div className=\"form-row mb-3\">\r\n                <label htmlFor=\"message\">Message</label>\r\n                <textarea\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            <div className=\"form-row mb-2\">\r\n                {formStatus.error && <p>Form submission unsuccessful</p>}\r\n                {formStatus.success ? (\r\n                    <p>Thanks for contacting me, I'll respond shortly <span role=\"img\" aria-label=\":D\">😁</span></p>\r\n                ) : (\r\n                    <button type=\"submit\" className=\"btn btn-primary ml-auto\">Submit</button>\r\n                )}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import About from '../components/about';\r\nimport Experience from '../components/experience';\r\nimport Contact from '../components/contact';\r\n\r\nconst routes = [\r\n    {\r\n        name: 'About',\r\n        component: About\r\n    },\r\n    {\r\n        name: 'Experience',\r\n        component: Experience\r\n    },\r\n    {\r\n        name: 'Contact',\r\n        component: Contact\r\n    }\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport Styles from './index.module.css';\r\n\r\nimport Form from '../form';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nimport {\r\n    faLinkedin,\r\n    faGithubSquare\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Contact = ({id}) => (\r\n    <section id={id} className={Styles.contactContainer}>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <span className={Styles.contactTitle}>Socials</span>\r\n                    <p>You can find me in the following places...</p>\r\n                    <ul className=\"list-inline\">\r\n                        <li className=\"list-inline-item\">\r\n                            <a\r\n                                href=\"https://github.com/m1ch34lj0hns0n\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className={Styles.link}\r\n                                target=\"_blank\"\r\n                            >\r\n                                <FontAwesomeIcon size=\"2x\" icon={faGithubSquare} />\r\n                            </a>\r\n                        </li>\r\n                        <li className=\"list-inline-item\">\r\n                            <a\r\n                                href=\"https://www.linkedin.com/in/michaelbenjohnson/\"\r\n                                rel=\"noopener noreferrer\"\r\n                                className={Styles.link}\r\n                                target=\"_blank\"\r\n                            >\r\n                                <FontAwesomeIcon size=\"2x\" icon={faLinkedin} />\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <Form />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Contact;","import React, { useState } from 'react';\r\nimport { Link } from \"react-scroll\";\r\n\r\nimport styles from './index.module.css';\r\n\r\nimport experiences from '../../routes';\r\n\r\nconst Navigation = () => {\r\n\r\n    const [toggleNavigation, setToggleNavigation] = useState(false);\r\n    const toggledOnNavigationClass = toggleNavigation ? styles.navigationToggleOpen : null\r\n\r\n    const navigationLinks = experiences.map(route => (\r\n        <li role=\"presentation\" key={route.name}>\r\n            <Link\r\n                smooth={true}\r\n                duration={500}\r\n                role=\"menuitem\"\r\n                title={route.name}\r\n                to={route.name.toLowerCase()}\r\n                className={styles.navigationLink}\r\n                href={`#${route.name.toLowerCase()}`}\r\n                onClick={() => setToggleNavigation(false)}\r\n            >\r\n                {route.name}\r\n            </Link>\r\n        </li>  \r\n    ))\r\n\r\n    return (\r\n        <div className={['fixed-top', toggledOnNavigationClass].join(' ')} >\r\n            <button\r\n                type=\"button\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n                onClick={() => setToggleNavigation(prevValue => !prevValue)}\r\n                className={['navbar-toggler', styles.navigationToggle].join(' ')}\r\n            >\r\n                <span className={styles.navigationIcon} />\r\n            </button>\r\n            {toggleNavigation && (\r\n                <nav role=\"navigation\" className={styles.navigationMenu}>\r\n                    <ul role=\"menubar\" className={styles.navigationList}>\r\n                        {navigationLinks}\r\n                    </ul>\r\n                </nav>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Navigation;","import React, { useState } from 'react';\r\nimport Styles from './index.module.css';\r\n\r\nconst Header = () => {\r\n\r\n    const [mouseCords, setMouseCords] = useState({x: 0, y: 0});\r\n\r\n    const onMouseMove = e => {\r\n        setMouseCords({x: e.pageX / 4, y: e.pageY / 4});\r\n    }\r\n\r\n    return (\r\n        <header\r\n            role=\"banner\"\r\n            onMouseMove={e => onMouseMove(e)}\r\n            className={Styles.header}\r\n        >\r\n            <h1\r\n                className={Styles.headerTitle}\r\n                style={{\r\n                    backgroundPositionX: `${mouseCords.x}%`,\r\n                    backgroundPositionY: `${mouseCords.y}%`\r\n                }}\r\n            >\r\n                Mike Johnson\r\n            </h1>\r\n            <h2 className={Styles.headerSubTitle}>\r\n                Software Development Engineer\r\n            </h2>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\nimport ReactGA from 'react-ga';\n\nimport './App.css';\n\nimport Navigation from './components/navigation';\nimport Header from './components/header';\n\nimport routes from './routes';\n\nfunction App() {\n\n  ReactGA.initialize('UA-180861803-1');\n  ReactGA.pageview(window.location.pathname);\n\n  const sections = routes.map((route, i) => (\n    <React.Fragment key={route.name}>\n      <route.component id={route.name.toLowerCase()} />\n    </React.Fragment>\n  ));\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Header />\n      {sections}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-snapshot';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactTitle\":\"contact_contactTitle__3zXux\",\"link\":\"contact_link__3t6hZ\"};"],"sourceRoot":""}